services:
 zookeeper:
  image: confluentinc/cp-zookeeper:6.2.0
  environment:
   ZOOKEEPER_CLIENT_PORT: 2181
  volumes:
   - zookeeper_data:/var/lib/zookeeper/data
   - zookeeper_logs:/var/lib/zookeeper/log
  networks:
   - kafka-network

 kafka:
  container_name: kafka
  image: confluentinc/cp-kafka:6.2.0
  depends_on:
   - zookeeper
  ports:
   - "9092:9092"
  environment:
   KAFKA_BROKER_ID: 1
   KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
   KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
   KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
   KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
   KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  volumes:
   - kafka_data:/var/lib/kafka/data
  networks:
   - kafka-network

 schema-registry:
  image: confluentinc/cp-schema-registry:6.2.0
  depends_on:
   - zookeeper
   - kafka
  ports:
   - "8081:8081"
  environment:
   SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
   SCHEMA_REGISTRY_HOST_NAME: schema-registry
  networks:
   - kafka-network

 kafka-ui:
  image: provectuslabs/kafka-ui:latest
  ports:
   - "8080:8080"
  environment:
   KAFKA_CLUSTERS_0_NAME: local
   KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
  networks:
   - kafka-network

 go-producer:
  container_name: producer
  entrypoint: ["/app/main"]
  build:
   context: .
   dockerfile: ./producer/Dockerfile
  depends_on:
   - kafka
  networks:
   - kafka-network

 go-consumer:
  container_name: consumer
  entrypoint: ["/app/main"]
  build:
   context: .
   dockerfile: ./consumer/Dockerfile
  depends_on:
   - kafka
  networks:
   - kafka-network

volumes:
 zookeeper_data:
 zookeeper_logs:
 kafka_data:

networks:
 kafka-network:
  driver: bridge
